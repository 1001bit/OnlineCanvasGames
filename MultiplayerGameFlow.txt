- Data storage:
    - Objects storages: 
        Static - processed on init. Ones with ID are sent to client upon connection
        Dynamic - processed every tick. Ones with ID are sent to client every tick
    - Objects types:
        - Server:
            Rect
        - Client:
            RectangleShape, Sprite, AnimatedSprite

- Init:
    - Server: 
        GameLogic generates a level based on a struct{staticObjects, dynamicObjects}, which is a blueprint of level. 
        It contains all the objects that are needed to be created and their parameters, then starts ticking
    - Client: 
        Gets levelJson message, which is generated upon client join, 
        reads it and shows on canvas, then starts ticking

- Ticks:
    - Server: 
        every ServerTick updates physics for dynamic objects, 
        then sends JSON of all of them (or only the ones that are changed) to all the clients 
        (or sends only the needed objects, that each client needs to know)
    - Client: 
        Interpolates all the objects (except player) from last server-confirmed state to current server-confirmed state.
        Alpha for interpolation is basically ClientAccumulator/ServerTick. DeltaTime is added to ClientAccumulator. 
        DeltaTime is nullified on server update.
        (May predict objects positions based on physics, if current method won't work).
        Predicts player position based on input with physics.
